"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const db_1 = require("./db");
const models_1 = require("./models");
const db = new db_1.ShopDB('db.sqlite');
const newCashier = {
    id: null,
    personnelNumber: '457932',
    employeeName: {
        lastName: 'Бабенко',
        firstName: 'Анна',
        patronymic: 'Николаевна',
    },
    sex: models_1.Sex.female,
    phone: '380962571544',
    addr: {
        city: models_1.City.Одесса,
        street: 'ул. Бенюка',
        building: 45,
        litera: null,
        apartment: null,
    },
    birthday: null,
    shopID: 17,
    startWork: new Date(2021, 2, 18),
    endWork: null,
    lastNet: models_1.Net.Comfy,
};
const newCashierId = db.addCashier(newCashier);
newCashierId.then((value) => {
    newCashier.id = value;
    console.log(newCashier.id);
    const tmpCashier = db.getCashierById(newCashier.id);
    tmpCashier.then((values) => {
        const cashier = values;
        console.log(cashier);
        cashier.birthday = new Date(1983, 0, 3);
        cashier.addr.building = 45;
        cashier.addr.apartment = 15;
        console.log(cashier);
        db.updateCashier(cashier);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUlBLDZCQUE4QjtBQUM5QixxQ0FFa0I7QUFHbEIsTUFBTSxFQUFFLEdBQUcsSUFBSSxXQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7QUFHbkMsTUFBTSxVQUFVLEdBQVk7SUFDMUIsRUFBRSxFQUFFLElBQUk7SUFDUixlQUFlLEVBQUUsUUFBUTtJQUN6QixZQUFZLEVBQUU7UUFDWixRQUFRLEVBQUUsU0FBUztRQUNuQixTQUFTLEVBQUUsTUFBTTtRQUNqQixVQUFVLEVBQUUsWUFBWTtLQUN6QjtJQUNELEdBQUcsRUFBRSxZQUFHLENBQUMsTUFBTTtJQUNmLEtBQUssRUFBRSxjQUFjO0lBQ3JCLElBQUksRUFBRTtRQUNKLElBQUksRUFBRSxhQUFJLENBQUMsTUFBTTtRQUNqQixNQUFNLEVBQUUsWUFBWTtRQUNwQixRQUFRLEVBQUUsRUFBRTtRQUNaLE1BQU0sRUFBRSxJQUFJO1FBQ1osU0FBUyxFQUFFLElBQUk7S0FDaEI7SUFDRCxRQUFRLEVBQUUsSUFBSTtJQUNkLE1BQU0sRUFBRSxFQUFFO0lBQ1YsU0FBUyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBQ2hDLE9BQU8sRUFBRSxJQUFJO0lBQ2IsT0FBTyxFQUFFLFlBQUcsQ0FBQyxLQUFLO0NBQ25CLENBQUM7QUFHRixNQUFNLFlBQVksR0FBbUIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMvRCxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDMUIsVUFBVSxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7SUFHM0IsTUFBTSxVQUFVLEdBQXFCLEVBQUUsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3RFLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUN6QixNQUFNLE9BQU8sR0FBWSxNQUFNLENBQUM7UUFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUdyQixPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDeEMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JCLEVBQUUsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGFwcCBtYWluIHBvaW50O1xuLy8gY2FuIGhhdmUgZnVsbCBBUEkgcm91dGluZyBmb3IgQ1JVRCAod2lsbCBiZSBwbHVzKSBPUiBpbiBzaW1wbGlmaWVkIHZlcnNpb246XG4vLyBjYW4gb25seSBjYWxsIGdldEFsbENhc2hpZXJzICsgZ2V0VGFyZ2V0Q2FzaGllcnMxICsgZ2V0VGFyZ2V0Q2FzaGllcnMyIGFuZCBsb2cgb3V0cHV0IG9mIGJvdGhcbi8vIEltcG9ydCBkZXBlbmRlbmNpZXNcbmltcG9ydCB7IFNob3BEQiB9IGZyb20gJy4vZGInO1xuaW1wb3J0IHtcbiAgSUNhc2hpZXIsIFNleCwgQ2l0eSwgTmV0LFxufSBmcm9tICcuL21vZGVscyc7XG5cbi8vIGNvbm5lY3RpbmcgdG8gdGhlIHNob3AgREIgKGxvZ2luIGFuZCBwYXNzd29yZCBub3QgcmVxdWlyZSlcbmNvbnN0IGRiID0gbmV3IFNob3BEQignZGIuc3FsaXRlJyk7XG5cbi8vIGNyZWF0ZWluZyBhIG5ldyBDYXNoZWlyXG5jb25zdCBuZXdDYXNoaWVyOklDYXNoaWVyID0ge1xuICBpZDogbnVsbCxcbiAgcGVyc29ubmVsTnVtYmVyOiAnNDU3OTMyJyxcbiAgZW1wbG95ZWVOYW1lOiB7XG4gICAgbGFzdE5hbWU6ICfQkdCw0LHQtdC90LrQvicsXG4gICAgZmlyc3ROYW1lOiAn0JDQvdC90LAnLFxuICAgIHBhdHJvbnltaWM6ICfQndC40LrQvtC70LDQtdCy0L3QsCcsXG4gIH0sXG4gIHNleDogU2V4LmZlbWFsZSxcbiAgcGhvbmU6ICczODA5NjI1NzE1NDQnLFxuICBhZGRyOiB7XG4gICAgY2l0eTogQ2l0eS7QntC00LXRgdGB0LAsXG4gICAgc3RyZWV0OiAn0YPQuy4g0JHQtdC90Y7QutCwJyxcbiAgICBidWlsZGluZzogNDUsXG4gICAgbGl0ZXJhOiBudWxsLFxuICAgIGFwYXJ0bWVudDogbnVsbCxcbiAgfSxcbiAgYmlydGhkYXk6IG51bGwsXG4gIHNob3BJRDogMTcsXG4gIHN0YXJ0V29yazogbmV3IERhdGUoMjAyMSwgMiwgMTgpLFxuICBlbmRXb3JrOiBudWxsLFxuICBsYXN0TmV0OiBOZXQuQ29tZnksXG59O1xuXG4vLyBhZGRpbmcgY3JlYXRlZCBDYXNoaWVyIHRvIHRoZSBEQlxuY29uc3QgbmV3Q2FzaGllcklkOlByb21pc2U8bnVtYmVyPiA9IGRiLmFkZENhc2hpZXIobmV3Q2FzaGllcik7XG5uZXdDYXNoaWVySWQudGhlbigodmFsdWUpID0+IHtcbiAgbmV3Q2FzaGllci5pZCA9IHZhbHVlO1xuICBjb25zb2xlLmxvZyhuZXdDYXNoaWVyLmlkKTtcblxuICAvLyBnZXR0aW5nIGluZm9ybWF0aW9uIGFib3V0IGNhc2hpZXIgd2l0aCBpZD0xOSBhbmQgdXBkYXRpbmcgaXRcbiAgY29uc3QgdG1wQ2FzaGllcjpQcm9taXNlPElDYXNoaWVyPiA9IGRiLmdldENhc2hpZXJCeUlkKG5ld0Nhc2hpZXIuaWQpO1xuICB0bXBDYXNoaWVyLnRoZW4oKHZhbHVlcykgPT4ge1xuICAgIGNvbnN0IGNhc2hpZXI6SUNhc2hpZXIgPSB2YWx1ZXM7XG4gICAgY29uc29sZS5sb2coY2FzaGllcik7XG5cbiAgICAvLyB1cGRhdGluZyBpbmZvcm1hdGlvbiBhYm91dCBjYXNoaWVyXG4gICAgY2FzaGllci5iaXJ0aGRheSA9IG5ldyBEYXRlKDE5ODMsIDAsIDMpOyAvLyBNb250aCBpbiAwLTExXG4gICAgY2FzaGllci5hZGRyLmJ1aWxkaW5nID0gNDU7XG4gICAgY2FzaGllci5hZGRyLmFwYXJ0bWVudCA9IDE1O1xuICAgIGNvbnNvbGUubG9nKGNhc2hpZXIpO1xuICAgIGRiLnVwZGF0ZUNhc2hpZXIoY2FzaGllcik7XG4gIH0pO1xufSk7XG5cbi8vIGRlbGV0aW5nIGluZm9ybWF0aW9uIGFib3V0IGNhc2hpZXIgd2l0aCBzb21lIGlkXG4vLyBkYi5kZWwoMjApO1xuLy8gZGIuY29tcGxldERlbGV0ZUNhc2hpZXIoMjApO1xuXG4vLyBnZXR0aW5nIGluZm8gYWJvdXQgYWxsIGNhc2hpZXJzXG4vLyBkYi5nZXRBbGxDYXNoaWVycygpO1xuXG4vLyBnZXR0aW5nIGluZm9ybWF0aW9uIGFib3V0IGNhc2hpZXIgd2l0aCBhIHNwZWNpYWwgZmlsdGVyXzFcbi8vIGRiLmdldFRhcmdldENhc2hpZXJzMSgpO1xuXG4vLyBnZXR0aW5nIGluZm9ybWF0aW9uIGFib3V0IGNhc2hpZXIgd2l0aCBhIHNwZWNpYWwgZmlsdGVyXzJcbi8vIGRiLmdldFRhcmdldENhc2hpZXJzMigpO1xuXG4vLyBjbG9zZSBEQiBhbmQgY29ubmVjdGlvblxuLy8gZGIuY2xvc2UoKTtcbiJdfQ==